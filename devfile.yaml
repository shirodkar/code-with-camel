schemaVersion: 2.2.0
metadata:
  name: code-with-camel
components:
  - name: dev-tooling
    container:
      memoryRequest: 1Gi
      memoryLimit: 8Gi
      cpuRequest: 500m
      cpuLimit: 2000m
      mountSources: true
      sourceMapping: /projects
      image: quay.io/devfile/universal-developer-image:ubi8-latest
      endpoints:
      - name: customers
        targetPort: 8081
        exposure: public
        protocol: http
      - name: debug
        exposure: internal
        targetPort: 5858
      - name: dt-socket
        exposure: internal
        targetPort: 5005
      env:
      - name: DEBUG_PORT
        value: '5858'
      - name: KUBEDOCK_ENABLED
        value: 'true'
      volumeMounts:
      - name: m2
        path: /home/user/.m2
  - name: postgres
    container:
      image: quay.io/sclorg/postgresql-15-c9s:c9s
      memoryRequest: 128M
      memoryLimit: 512M
      sourceMapping: /projects
      mountSources: true
      env:
      - name: POSTGRESQL_USER
        value: postgres
      - name: POSTGRESQL_PASSWORD
        value: postgres
      - name: POSTGRESQL_DATABASE
        value: postgres
      volumeMounts:
      - name: pgdata
        path: /var/lib/pgsql/data
      endpoints:
        - name: postgres
          targetPort: 5432
          exposure: public
  - volume:
      size: 4Gi
    name: projects
  - volume:
      size: 2Gi
    name: pgdata
  - volume:
      size: 2Gi
    name: m2
commands:
  - id: install
    exec:
      commandLine: mvn clean install
      component: dev-tooling
  - id: package
    exec:
      commandLine: mvn package
      component: dev-tooling
  - id: quarkus-dev-mode
    exec:
      commandLine: 'mvn quarkus:dev -Dmaven.repo.local=/home/user/.m2/repository -Dquarkus.http.host=0.0.0.0'
      component: dev-tooling
      hotReloadCapable: true
      group:
        isDefault: true
        kind: run
      label: Start Quarkus Development mode (Hot reload)
  - id: init-setup
    exec:
      label: '01: initial setup'
      component: dev-tooling
      workingDir: "${PROJECT_SOURCE}"
      commandLine: |
        #if sdkman is present use it
        #[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh" && sdk default java 17.0.7-tem
        #if no sdkaman do it manually
        #[[ -d /usr/lib/jvm/java-17-openjdk ]] && rm -rf ${HOME}/.java/current/* && ln -s /usr/lib/jvm/java-17-openjdk/* ${HOME}/.java/current
        #copy maven settings pointing to in-cluster nexus mirror
        [[ -s "$PROJECT_SOURCE/settings.xml" ]] && cp -v $PROJECT_SOURCE/settings.xml $HOME/.m2/
        #setup git default config
        git config --local credential.helper store
        git config --local pull.rebase true
        git config --local fetch.prune true
        git config --local diff.colorMoved zebra
        git config user.name "user"
        git config user.email "user@opentlc.com"
        echo "source /usr/share/bash-completion/completions/git" >> /home/user/.bashrc
        oc completion bash > /home/user/.oc_bash_completion
        echo "source /home/user/.oc_bash_completion" >> /home/user/.bashrc
  - id: oc-login
    exec:
      label: '02: OC Login'
      component: dev-tooling
      commandLine: |
        clear
        echo
        echo "current user: $(oc whoami)"
        echo "current project: $(oc project)"
        echo
        oc login "https://$KUBERNETES_SERVICE_HOST:443" --insecure-skip-tls-verify=true
        # oc project {{ user }}-{{ camel_ns_suffix }}    
events:
  postStart:
    - init-setup # <== Start of the workspace happens after this command is completed